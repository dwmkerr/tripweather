name: main

on:
  push:
    branches:
      - main

jobs:
  main:
    runs-on: ubuntu-20.04
    # Write all permissions needed for 'release please' PR creation.
    permissions: write-all
    steps:
      # If the 'release please' action has been performed, we can actually
      # deploy the website.
      # Note: *every* step here needs to check the 'release_created' flag.
      - name: Checkout
        uses: actions/checkout@v4

      # Configure node and npm. 'registry-url' is required for npm publish.
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: "https://registry.npmjs.org"

      # Fixup Git URLs, see:
      # https://stackoverflow.com/questions/70663523/the-unauthenticated-git-protocol-on-port-9418-is-no-longer-supported
      - name: Fix up git URLs
        run: echo -e '[url "https://github.com/"]\n  insteadOf = "git://github.com/"' >> ~/.gitconfig

      - name: Install Dependencies
        run: npm install

      - name: Test
        run: npm run test

      - name: Build
        run: npm run build

      # Upload coverage.
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      # Run Release Please to create release pull requests if we have merged to
      # the main branch.
      - uses: google-github-actions/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: node

      # Deploy to Firebase hosting.
      - uses: FirebaseExtended/action-hosting-deploy@v0
        if: ${{ steps.release.outputs.release_created }}
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_LIFELINE_DWMKERR }}'
          channelId: live
          projectId: lifeline-dwmkerr

      # Deploy to NPM.
      - run: "npm publish --access=public"
        if: ${{ steps.release.outputs.release_created }}
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
